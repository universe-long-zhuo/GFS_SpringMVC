<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
   					http://www.springframework.org/schema/beans 
   					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
   					http://www.springframework.org/schema/context 
   					http://www.springframework.org/schema/context/spring-context-3.0.xsd   
   					http://www.springframework.org/schema/aop 
   					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
   					http://www.springframework.org/schema/mvc
       				http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
   					http://www.springframework.org/schema/tx 
   					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">



	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/gfs_database?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- xml实体映射使用 <property name="mappingLocations"> <value>classpath*:com.ds/*.hbm.xml</value> 
			</property> -->
		<property name="packagesToScan">
			<list>
				<value>com.gfs.hibernate.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.hbm2ddl.auto=update
				hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
				hibernate.show_sql=true
				hibernate.formart_sql=true
				hibernate.connection.autocommit=true
			</value>
		</property>
		<property name="mappingResources">
			<list>
				<value>
					com/gfs/hibernate/pojo/TrySpringmvc.hbm.xml
				</value></list>
		</property>
	</bean>
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 默认的注解映射的支持 -->
	
	<context:annotation-config />
	<context:component-scan base-package="com.gfs" />  <!-- 自动扫描该包路径下的所有注解 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/> 
	<!-- 配置视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>

	</bean>
	<!-- 事务配置 -->
	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	
	<!-- 自行添加可删除   从此  -->
	<!-- 配置上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>   
		<property name="maxUploadSize" value="5242880"></property>
	</bean>
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/error_fileupload.jsp页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error_fileupload</prop>
			</props>
		</property>
	</bean>
	
	<!-- 处理静态资源，如图片 -->
	<mvc:default-servlet-handler/>
	
	<mvc:annotation-driven/>
	
	<!-- 到这里 -->
	
	
	<!-- 事务的传播特性 -->


	<aop:config>
		<aop:pointcut id="dao" expression="execution(* com.gfs.*.*.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="dao" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		 	 <tx:method name="*" propagation="REQUIRED" /> 
			

		</tx:attributes>

	</tx:advice>
	<tx:annotation-driven transaction-manager="transactionManager" />


</beans>